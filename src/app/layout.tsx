import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import { headers } from "next/headers";
import { AppProviders } from "@/providers/app-providers";
import { DevTenantService } from "@/lib/dev-services/dev-tenant-provisioning";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const headersList = await headers();
  const subdomain = headersList.get("x-tenant-subdomain");

  let tenant = null;
  if (subdomain) {
    const service = new DevTenantService();
    tenant = await service.getTenant(subdomain);
  }

  return (
    <html lang="en" data-theme="dark" style={{ colorScheme: "dark" }}>
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <AppProviders tenant={tenant}>{children}</AppProviders>
      </body>
    </html>
  );
}
